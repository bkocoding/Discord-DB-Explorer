// <auto-generated />
using System;
using Discord_DB_Explorer.Module.BusinessObjects;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Discord_DB_Explorer.Module.Migrations
{
    [DbContext(typeof(Discord_DB_ExplorerEFCoreDbContext))]
    partial class Discord_DB_ExplorerEFCoreDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Proxies:ChangeTracking", true)
                .HasAnnotation("Proxies:CheckEquality", true)
                .HasAnnotation("Proxies:LazyLoading", false)
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Discord_DB_Explorer.Module.BusinessObjects.Emoji", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("EmojiName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmojiUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("SunucuID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("isGIF")
                        .HasColumnType("bit");

                    b.HasKey("ID");

                    b.HasIndex("SunucuID");

                    b.ToTable("Emojiler");
                });

            modelBuilder.Entity("Discord_DB_Explorer.Module.BusinessObjects.Kanal", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("KanalAdi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("SunucuID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.HasIndex("SunucuID");

                    b.ToTable("Kanallar");
                });

            modelBuilder.Entity("Discord_DB_Explorer.Module.BusinessObjects.Kullanici", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AvatarUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Bio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Kullanicilar");
                });

            modelBuilder.Entity("Discord_DB_Explorer.Module.BusinessObjects.Mesaj", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Icerik")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("KanalID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("KullaniciID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.HasIndex("KanalID");

                    b.HasIndex("KullaniciID");

                    b.ToTable("Mesajlar");
                });

            modelBuilder.Entity("Discord_DB_Explorer.Module.BusinessObjects.Rol", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Permissions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Roller");
                });

            modelBuilder.Entity("Discord_DB_Explorer.Module.BusinessObjects.Sunucu", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ServerName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Sunucular");
                });

            modelBuilder.Entity("Discord_DB_Explorer.Module.BusinessObjects.SunucuUye", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("JoinedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("KullaniciID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("RolID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("SunucuID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.HasIndex("KullaniciID");

                    b.HasIndex("RolID");

                    b.HasIndex("SunucuID");

                    b.ToTable("SunucuUyeleri");
                });

            modelBuilder.Entity("EmojiKullanici", b =>
                {
                    b.Property<Guid>("FavoruiteEmojisID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UsersID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("FavoruiteEmojisID", "UsersID");

                    b.HasIndex("UsersID");

                    b.ToTable("EmojiKullanici");
                });

            modelBuilder.Entity("Discord_DB_Explorer.Module.BusinessObjects.Emoji", b =>
                {
                    b.HasOne("Discord_DB_Explorer.Module.BusinessObjects.Sunucu", null)
                        .WithMany("Emoji")
                        .HasForeignKey("SunucuID");
                });

            modelBuilder.Entity("Discord_DB_Explorer.Module.BusinessObjects.Kanal", b =>
                {
                    b.HasOne("Discord_DB_Explorer.Module.BusinessObjects.Sunucu", "Sunucu")
                        .WithMany("Kanallar")
                        .HasForeignKey("SunucuID");

                    b.Navigation("Sunucu");
                });

            modelBuilder.Entity("Discord_DB_Explorer.Module.BusinessObjects.Mesaj", b =>
                {
                    b.HasOne("Discord_DB_Explorer.Module.BusinessObjects.Kanal", "Kanal")
                        .WithMany("Mesajlar")
                        .HasForeignKey("KanalID");

                    b.HasOne("Discord_DB_Explorer.Module.BusinessObjects.Kullanici", "Kullanici")
                        .WithMany()
                        .HasForeignKey("KullaniciID");

                    b.Navigation("Kanal");

                    b.Navigation("Kullanici");
                });

            modelBuilder.Entity("Discord_DB_Explorer.Module.BusinessObjects.SunucuUye", b =>
                {
                    b.HasOne("Discord_DB_Explorer.Module.BusinessObjects.Kullanici", "Kullanici")
                        .WithMany()
                        .HasForeignKey("KullaniciID");

                    b.HasOne("Discord_DB_Explorer.Module.BusinessObjects.Rol", "Rol")
                        .WithMany()
                        .HasForeignKey("RolID");

                    b.HasOne("Discord_DB_Explorer.Module.BusinessObjects.Sunucu", "Sunucu")
                        .WithMany("SunucuUyeleri")
                        .HasForeignKey("SunucuID");

                    b.Navigation("Kullanici");

                    b.Navigation("Rol");

                    b.Navigation("Sunucu");
                });

            modelBuilder.Entity("EmojiKullanici", b =>
                {
                    b.HasOne("Discord_DB_Explorer.Module.BusinessObjects.Emoji", null)
                        .WithMany()
                        .HasForeignKey("FavoruiteEmojisID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Discord_DB_Explorer.Module.BusinessObjects.Kullanici", null)
                        .WithMany()
                        .HasForeignKey("UsersID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Discord_DB_Explorer.Module.BusinessObjects.Kanal", b =>
                {
                    b.Navigation("Mesajlar");
                });

            modelBuilder.Entity("Discord_DB_Explorer.Module.BusinessObjects.Sunucu", b =>
                {
                    b.Navigation("Emoji");

                    b.Navigation("Kanallar");

                    b.Navigation("SunucuUyeleri");
                });
#pragma warning restore 612, 618
        }
    }
}
